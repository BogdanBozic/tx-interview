name: Goldbach-CI

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install dependencies
        run: pip install -r app/requirements.txt &

      - name: flake8 Lint
        uses: py-actions/flake8@v2

      - name: Run unit tests
        run: pytest &

      - name: Run Hadolint
        uses: hadolint/hadolint-action@v3.1.0
        with:
          dockerfile: Dockerfile

  build:
    runs-on: ubuntu-latest
    needs:
      - test
    steps:

      - name: Build and push
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: ${{ secrets.ECR_NAME }}/${{
          registry: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.DEFAULT_AWS_REGION }}.amazonaws.com
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ECR_USER_SECRET_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.ECR_USER_ACCESS_KEY }}

      - name: Store tag into file
        run: |
          echo ${{ github.sha }} > tag.txt
          cat tag.txt

      - uses: actions/upload-artifact@v3
        with:
          name: my-artifact
          path: tag.txt

      - uses: actions/download-artifact@v2
        with:
          name: my-artifact
          path: distfiles

#      - name: copy file to server
#        uses: appleboy/scp-action@v0.1.4
#        with:
#          host: ${{ secrets.REMOTE_HOST }}
#          username: ec2-user
#          key: ${{ secrets.SSH_PRIVATE_KEY }}
#          port: 22
#          source: distfiles/*
#          target: /home/ec2-user/k8s_resources
#
#      - name: Update deployment
#        uses: appleboy/ssh-action@v0.1.10
#        with:
#          host: ${{ secrets.REMOTE_HOST }}
#          username: "ec2-user"
#          key: ${{ secrets.SSH_PRIVATE_KEY }}
#          port: "22"
#          script: |
#            export PATH=$PATH:/home/ec2-user/bin:/home/ec2-user/.local/bin
#            cd /home/ec2-user/k8s_resources
#            export TAG=$(cat distfiles/tag.txt | tr -d '\n')
#            yq -i ".spec.template.spec.containers[0].image=\"bogdanbozic/bogdan_goldbach_app_repo:$TAG\"" goldbach-app-deployment.yaml
#            kubectl apply -f goldbach-app-deployment.yaml